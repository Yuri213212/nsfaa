[语法]
·基本结构：（十进制长度）控制字符（参数）
·命令之间用空白字符分隔

[控制字符]
·获取地址		.				//读取到这即出错，错误信息里返回当前地址，用于调整常数的起始地址以及辅助计算相对地址
·指定地址(ORG)		@ 十六进制数
·定义标签(DS)		（长度，默认0） : 标签名	//内部：_START_，_INIT_，_PLAY_
·常数.标签低字节	% 标签名
·常数.标签高字节	^ 标签名
·常数.标签双字节	& 标签名
·常数.十进制数(DC)	（长度，默认defnumlen）# 十进制数
·常数.十六进制数(DC)	（长度，默认defnumlen）$ 十六进制数
·常数.字符(DC)		' 字符
·常数.字符串(DC)	（长度，默认自动，超出部分填零）" 字符串
·注释			; 到行末的注释
·块开始		{				//在块的内部可以定义局部标签，用于可嵌套结构避免标签冲突
·块结束		}
·宏			\ 宏				//template.txt在header和setting节列出了所有的宏
·命令			命令名 （常数）

[注意]
·长度指的是输出的数据长度，在自明的情况下通常省略
　　如果没写长度或写0视为默认值
　　在数相对地址的时候需要注意“&”的长度是2而不是1
·对于注释，“;”不在行首的情况下必须前加空格或制表符
　　因为“;”被认为是以到行末所有字符为参数的没有意义的命令
·一般情况下禁止重复定义标签，但是在块的内部允许定义局部标签（类似局部变量）
　　不同块的局部标签可以同名，但是标签的引用会优先使用同一个块内的定义（即使定义在引用的后面）

[命令名准则]
·命令名基于CASL，参照mips以及其他指令集的命令名，要求尽量做到第一印象无歧义
·为了换行自由，将地址模式整合到命令名里
·对于同一个命令的不同用法或多重意义分别定义别名，编程时使用最容易理解的别名
·对于非官方命令，使用长名描述等价动作
