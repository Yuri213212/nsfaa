[语法]
·基本结构：（十进制长度）控制字符（参数）
·命令之间用空白字符分隔

[控制字符]
·获取地址			.						//读取到这即出错，错误信息里返回当前地址，用于调整常数的起始地址以及辅助计算相对地址
·指定地址(ORG)			@ 十六进制数
·数据边界地址			| 十六进制数					//若当前地址超过指定的地址将报错，用于避免数据越界，注意0x10000是非法值，因为不需要写，超出64KB范围必然穿越回0x0000，会报错
·定义标签(DS)			（长度，默认0） : 标签名
·用已定义的标签指定地址	~ 标签名
·常数.相对标签			! 标签名					//注意：若超出可表示范围将报错
·常数.标签低字节		% 标签名
·常数.标签高字节		^ 标签名
·常数.标签双字节		& 标签名
·常数.十进制数(DC)		（长度，默认defnumlen）# 十进制数
·常数.十六进制数(DC)		（长度，默认defnumlen）$ 十六进制数
·常数.字符(DC)			' 字符						//注意：行末的'命令不报错，视为空格（0x20）
·常数.字符串(DC)		（长度，默认自动，超出部分填零）" 字符串
·注释				; 到行末的注释
·块开始			{						//在块的内部可以定义局部标签，用于可嵌套结构避免标签冲突
·块结束			}
·宏				\ 宏						//参见“宏”节，用法详见示例工程
·命令				命令名 （常数）

[注意]
·长度指的是输出的数据长度，在自明的情况下通常省略
　　如果没写长度视为默认值
　　在数相对地址的时候需要注意“&”的长度是2而不是1
·对于注释，“;”不在行首的情况下必须前加空格或制表符
　　因为“;”被认为是以到行末所有字符为参数的没有意义的命令
·一般情况下禁止重复定义标签，但是在块的内部允许定义局部标签（类似局部变量）
　　不同块的局部标签可以同名，但是标签的引用会优先使用同一个块内的定义（即使定义在引用的后面）

[命令名准则]
·命令名基于CASL，参照mips以及其他指令集的命令名，要求尽量做到第一印象无歧义
·为了换行自由，将地址模式整合到命令名里
·对于同一个命令的不同用法或多重意义分别定义别名，编程时使用最容易理解的别名
·对于非官方命令，使用长名描述等价动作

[宏]
\image 文件类型			//指定文件类型，默认无，必须最先指定，禁止重定义
\defnumlen 十进制数		//指定$和#命令的默认长度，默认1
\bank 块类型			//添加新数据模块，必须先添加数据模块才能写数据
\include 路径			//导入代码文件，指定的文件视为在当前位置展开
\import 路径			//导入数据，指定的文件视为数据从当前地址开始写入

\nsf_trimend 十进制数		//是否移除NSF末尾的空数据，默认1
\nsf_songs 十进制数		//NSF的曲目数，默认1
\nsf_entry 十进制数		//NSF的默认曲目号（第一首为1），默认1
\nsf_name 下一行		//NSF的“名称”字符串，31字节，默认空
\nsf_artist 下一行		//NSF的“艺术家”字符串，31字节，默认空
\nsf_copyright 下一行		//NSF的“(c)”字符串，31字节，默认空
\nsf_div2A03 十进制数		//NSF使用2A03播放时呼叫nsf_:play的分频值，被VirtuaNES无视，默认16666
\nsf_div2A07 十进制数		//NSF使用2A07播放时呼叫nsf_:play的分频值，被VirtuaNES无视，默认20000
\nsf_apu 十进制数		//NSF的偏好APU，默认0（2A03）
\nsf_expand 十六进制数		//NSF的扩展标记，默认0x00（无扩展）
\nsf_bankswitch 下一行		//NSF的初始数据模块映射值，8个十六进制数，默认全0x00（不使用映射功能）
\nsf_:init			//NSF的init函数标签，必须指定，禁止重定义
\nsf_:play			//NSF的play函数标签，必须指定，禁止重定义

\nes_mapper 十六进制数		//NES的mapper，默认0，一般在头文件中定义
\nes_mirror 十进制数		//NES的显存模式，默认0（水平镜像）
\nes_battery 十进制数		//NES是否使用电池备份的RAM，默认0
\nes_bankoffset 十六进制数	//设置块内偏移，默认0x0000，仅对组合块有效，用来对应特殊mapper的细粒度模型

\fds_newside			//向FDS添加新面，必须最先执行
\fds_boottoid 十进制数		//FDS初始读取数据至块id，默认块数
\fds_bankid 十进制数		//FDS当前块的id，默认块序号

[块类型]
·BIN_64K，BIN_32K，BIN_16K，BIN_8K，BIN_4K，BIN_2K，BIN_1K，BIN_512，BIN_256
　　ROM芯片模型，后缀对应地址空间（下同）
　　挂载范围是0000~FFFF，只能用于bin文件
·NSF_32K，NSF_16K，NSF_8K，NSF_4K
　　NSF用块模型，其中NSF_32K对应无模块映射的全数据，NSF_4K对应有模块映射时的单一模块
　　挂载范围是6000~FFFF，可以用于bin或nsf文件
·PRG_16K
　　NES的PRG块模型，目前编译器不支持mapper0的单一空间模型
　　挂载范围是8000~FFFF，可以用于bin或nes文件
·PRG-16K
　　NES的PRG组合块模型，与上面类似但是允许块内偏移且不会检测穿越，用来对应特殊mapper的细粒度模型
　　挂载范围是8000~FFFF，只能用于nes文件
·FDS_64K
　　FDS的PRGRAM模型
　　挂载范围是6000~DFFF，只能用于fds文件
·PRG_64K
　　FDS的全CPU地址空间模型，用于利用其BIOS做一些特殊操作
　　挂载范围是0000~FFFF，只能用于fds文件
·CHR_8K
　　NES/FDS的CHR块模型
　　挂载范围是0000~1FFF，可以用于bin、nes或fds文件
·CHR-8K
　　NES/FDS的CHR组合块模型，与上面类似但是允许块内偏移且不会检测穿越，用来对应特殊mapper的细粒度模型
　　挂载范围是0000~1FFF，可以用于bin、nes或fds文件
·CI_2K
　　FDS的CIRAM模型
　　挂载范围是2000~3FFF，只能用于fds文件
