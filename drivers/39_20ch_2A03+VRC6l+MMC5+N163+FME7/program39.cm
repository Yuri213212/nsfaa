	//[bank8]config
//@8000
extern dpcminst[0x100];
//@8100
extern mainpage[0x100];
//@8200
extern pageend[0x100];
//@8300
extern expage[0x100];
//@8400
extern fxinitdata[0x80];
//@8480
extern fx1inittuning,fx2inittuning,fx3inittuning,fx4inittuning,fx5inittuning,fx6inittuning,fx7inittuning,fx8inittuning;
//@8490
extern inittempomul,inittempodiv,initloopindex,initloopaddr,initdelay,noiseinitvol,sqr1initvol,sqr2initvol,sqr3initvol;
//@849A
extern rec5initinsvol,rec6initinsvol;
//@849C
extern rec1initinsvol,rec2initinsvol;
//@849E
extern rec3initinsvol,rec4initinsvol;
////in 8500
//extern fmfreq[0x0c..0xbc];
//extern fxins[0x1f..0xff];
//extern fxinstuning[0x1e..0xfe];
//@8500
extern fxhifreq[0x80*2];	//alter, upper for +1oct tuning
//@8600
extern fxmidfreq[0x80*2];
//@8700
extern fxlofreq[0x80*2];
//@8800
extern divhiperiod[0x80];
//@8880
extern divloperiod[0x80];
//@8900
extern initcallback();
	//[bankB]data main
//@B000
extern dpcmnote[0x100];
//@B100
extern noisenote[0x100];
//@B200
extern sqr1note[0x100];
//@B300
extern sqr2note[0x100];
//@B400
extern sqr3note[0x100];
//@B500
extern fme7vol[0x100];
//@B600
extern trinote[0x100];
//@B700
extern mmc5vol[0x100];
//@B800
extern rec5note[0x100];
//@B900
extern rec6note[0x100];
//@BA00
extern rec1note[0x100];
//@BB00
extern rec2note[0x100];
//@BC00
extern 2a03vol[0x100];
//@BD00
extern rec3note[0x100];
//@BE00
extern rec4note[0x100];
//@BF00
extern vrc6vol[0x100];
	//[bankC]data ex
//@C000
extern fx1note[0x100];
//@C100
extern fx2note[0x100];
//@C200
extern fx3note[0x100];
//@C300
extern fx4note[0x100];
//@C400
extern fx5note[0x100];
//@C500
extern fx6note[0x100];
//@C600
extern fx7note[0x100];
//@C700
extern fx8note[0x100];
//@C800
extern fx1insvol[0x100];
//@C900
extern fx2insvol[0x100];
//@CA00
extern fx3insvol[0x100];
//@CB00
extern fx4insvol[0x100];
//@CC00
extern fx5insvol[0x100];
//@CD00
extern fx6insvol[0x100];
//@CE00
extern fx7insvol[0x100];
//@CF00
extern fx8insvol[0x100];
	//[bankD]sample
////@D000
//extern sample[0xff1];
//@DFFE
extern samplespeed,samplelength;

//@00
var1 state,count,tempomul,tempodiv,loopindex,loopaddr,pageindex,addr,maxaddr,fme7state,temp;
//@10
var1 fx1tuning,fx2tuning,fx3tuning,fx4tuning,fx5tuning,fx6tuning,fx7tuning,fx8tuning;

//@9011
_init_(A){
	goto init;
}//no return

//@9020
const1 divvol[8]={$00 $01 $02 $03 $04 $06 $08 $0C};

//@9031
_play_(){	//#begin time-critical mode
	if (!(A=state)) return;
	if (A<0){
		if (count){
			--count;
			return;
		}
		state=1;				//play ready
	}
	ifcs (count=A=count-tempomul) return;		//tempo adapter
	count=A+tempodiv;
	Y=addr;						//process pattern
	X=dpcmnote[Y];					//[dpcm] main=dpcmindex(8);00:key-off,others hit:key-on,miss:do nothing
	if (!X){					//key-off
		st2a03=0x0f;
	}else if (A=dpcminst[X]){			//key-on
		st2a03=X=0x0f;
		bankD=A;
		dpcmdata=0x40;
		dpcmmode=samplespeed;
		dpcmlen=samplelength;
		st2a03=0x1f;
	}
	A=noisenote[Y]>>4;				//[noise] main=noisevol(4),noiseperiod(4);control=0:key-on,control=1&period=E:key-off;vol!=0:change vol
	if (A){
		noisevol=A|0x30;
	}
	X=A=(noisenote[Y]&0x0f)<<1;
	if (!(sqr1note[Y]&0x80)){			//key-on
		sqr2note[Y]<<<1;			//C=sqr2note[Y]&0x80?1:0
		noiseperiod=A=X>>>1;			//A=sqr2note[Y]&0x80|(noisenote[Y]&0x0f)
		noiselen=0x00;
	}else if (X==0x1c){				//key-off
		st2a03=A=st2a03&0x10|0x07;
		st2a03=A|0x0f;
	}
	temp=trinote[Y]&0xc0;				//[fme7] main=sqr2vol(4),sqr1vol(4);vol!=0:change vol
	A=(mmc5vol[Y]>>2|temp)>>4;
	if (A){
		fme7.sqr3vol=A;
	}
	A=fme7vol[Y]>>4;
	if (A){
		fme7.sqr2vol=A;
	}
	A=fme7vol[Y]&0x0f;
	if (A){
		fme7.sqr1vol=A;
	}
	A=sqr1note[Y]&0x7f;				//[sqr1] main=noisecontrol,sqr1note(7);note<126:key-on,note=126:key-off
	if (A<0x7e){					//key-on
		X=A;
		fme7.sqr1hiperiod=divhiperiod[X];
		fme7.sqr1loperiod=divloperiod[X];
		fme7state&=0x3e;
	}else if (A==0x7e){				//key-off
		fme7state|=0x01;
	}
	A=sqr2note[Y]&0x7f;				//[sqr2] main=noiseins,sqr2note(7)
	if (A<0x7e){					//key-on
		X=A;
		fme7.sqr2hiperiod=divhiperiod[X];
		fme7.sqr2loperiod=divloperiod[X];
		fme7state&=0x3d;
	}else if (A==0x7e){				//key-off
		fme7state|=0x02;
	}
	A=sqr3note[Y]&0x7f;				//[sqr3] main=1,sqr3note(7)
	if (A<0x7e){					//key-on
		X=A;
		fme7.sqr3hiperiod=divhiperiod[X];
		fme7.sqr3loperiod=divloperiod[X];
		fme7state&=0x3b;
	}else if (A==0x7e){				//key-off
		fme7state|=0x04;
	}
	fme7.stfme7=fme7state;

	A=trinote[Y]&0x3f;				//[tri] main=sqr3volh(2),trinote(6);note<62:key-on,note=62:key-off
	if (A<0x3e){					//key-on
		X=A;
		trihiperiod=divhiperiod[X];
		triloperiod=divloperiod[X];
	}else if (A==0x3e){				//key-off
		st2a03=A=st2a03&0x10|0x0b;
		st2a03=A|0x0f;
	}

	A=mmc5vol[Y]&0x07;				//[rec5] main=rec5ins(2),rec5note(6);note<62:key-on,note=62:key-off
	if (A){
		X=A;
		rec5vol=rec5note[Y]&0xc0|0x30|divvol[X];
	}
	A=rec5note[Y]&0x3f;
	if (A<0x3e){					//key-on
		X=A;
		rec5hiperiod=divhiperiod[X];
		rec5loperiod=divloperiod[X];
	}else if (A==0x3e){				//key-off
		stmmc5=0x02;
		stmmc5=0x03;
	}
	A=mmc5vol[Y]>>3&0x07;				//[rec6] main=rec6ins(2),rec6note(6)
	if (A){
		X=A;
		rec6vol=rec6note[Y]&0xc0|0x30|divvol[X];
	}
	A=rec6note[Y]&0x3f;
	if (A<0x3e){					//key-on
		X=A;
		rec6hiperiod=divhiperiod[X];
		rec6loperiod=divloperiod[X];
	}else if (A==0x3e){				//key-off
		stmmc5=0x01;
		stmmc5=0x03;
	}

	A=2a03vol[Y]&0x07;				//[rec1] main=rec1ins(2),rec1note(6)
	if (A){
		X=A;
		rec1vol=rec1note[Y]&0xc0|0x30|divvol[X];
	}
	A=rec1note[Y]&0x3f;
	if (A<0x3e){					//key-on
		X=A;
		rec1hiperiod=divhiperiod[X];
		rec1loperiod=divloperiod[X];
	}else if (A==0x3e){				//key-off
		st2a03=A=st2a03&0x10|0x0e;
		st2a03=A|0x0f;
	}
	A=2a03vol[Y]>>3&0x07;				//[rec2] main=rec2ins(2),rec2note(6)
	if (A){
		X=A;
		rec2vol=rec2note[Y]&0xc0|0x30|divvol[X];
	}
	A=rec2note[Y]&0x3f;
	if (A<0x3e){					//key-on
		X=A;
		rec2hiperiod=divhiperiod[X];
		rec2loperiod=divloperiod[X];
	}else if (A==0x3e){				//key-off
		st2a03=A=st2a03&0x10|0x0d;
		st2a03=A|0x0f;
	}

	A=vrc6vol[Y]&0x07;				//[rec3] main=rec3insh(1),rec3note(7);note<126:key-on,note=126:key-off
	if (A){
		X=A;
		rec3note[Y]<<<1;			//C=rec3note[Y]&0x80?1:0
		A=(2a03vol[Y]&0xc0)>>>1;		//A=rec3note[Y]&0x80|(2a03vol[Y]>>1&0x60)
		rec3vol=A>>1|divvol[X];
	}
	A=rec3note[Y]&0x7f;
	if (A<0x7e){					//key-on
		X=A;
		rec3hiperiod=divhiperiod[X]|0x80;
		rec3loperiod=divloperiod[X];
	}else if (A==0x7e){				//key-off
		rec3hiperiod=0x00;
	}
	A=vrc6vol[Y]>>3&0x07;				//[rec4] main=rec4insh(1),rec4note(7)
	if (A){
		X=A;
		rec4note[Y]<<<1;			//C=rec4note[Y]&0x80?1:0
		A=(vrc6vol[Y]&0xc0)>>>1;		//A=rec4note[Y]&0x80|(vrc6vol[Y]>>1&0x60)
		rec4vol=A>>1|divvol[X];
	}
	A=rec4note[Y]&0x7f;
	if (A<0x7e){					//key-on
		X=A;
		rec4hiperiod=divhiperiod[X]|0x80;
		rec4loperiod=divloperiod[X];
	}else if (A==0x7e){				//key-off
		rec4hiperiod=0x00;
	}

	A=fx1insvol[Y]&0x0f;				//[fx] sub=ins(4),vol(4);vol!=0:change vol,ins!=0:change ins
	if (A){
		n163.fx1vol=A|0x70;
	}
	A=fx1insvol[Y]&0xf0;
	if (A){
		X=A|=0x0e;
		fx1tuning=fxhifreq[X];
		X|=0x0f;
		n163.fx1wave=fxhifreq[X];
	}
	NA=fx1hifreq;
	A=fx1note[Y];					//[fx] main=oct(3),~reset(1),note(4);note<C:key-on,note=E:key-off
	if ((A&=0x0f)<0x0c){				//key-on
		if (!((A=fx1note[Y])&0x10){		//phase reset
			ND=0xe4;
		}
		A&=0xef;
		X=A|fx1tuning;
		ND=fxhifreq[X];
		n163.fx1midfreq=fxmidfreq[X];
		n163.fx1lofreq=fxlofreq[X];
	}else if (A==0x0e){				//key-off
		ND=fx1tuning|0xe0;
		n163.fx1midfreq=0;
		n163.fx1lofreq=0;
	}

...//same for fx2~8

	A=++addr;					//address inc
	if (A&&A-maxaddr-1<0) return;			//<0:cc(lo)	//if (A&&A<=maxaddr) return;
	X=++pageindex;					//new page
}//no return

newpage(X){
	Y=0x00;
	if (!(A=mainpage[X])){				//end of pages
		X=loopindex;
		if (!(A=mainpage[X])){			//null pointer for no loop
			state=0;
			return;
		}
		Y=loopaddr;
	}
	pageindex=X;					//set page index
	bankB=A;					//switch bank main
	bankC=expage[X];				//switch bank ex
	addr=Y;						//set start addr
	maxaddr=pageend[X];				//set max addr
}

init(A){
	push(A);
	st2a03=0x00;					//all key-off and reset data
	rec4hiperiod=rec3hiperiod=0x00;			//rec key-off
	stmmc5=0x00;					//rec key-off
	fme7.stfme7=fme7state=0x3f;			//all key-off
	for (X=0x7f;X>=0;--X){
		n163.X=fxinitdata[X];
	}
	dpcmdata=0x40;					//init dpcm data 0x40
	dpcmwave=0x40;					//dpcm start from $D000
	rec2swp=rec1swp=0x08;				//disable swap
	rec1vol=A=rec1initinsvol|0x30;			//init rec1 insvol
	rec2vol=A=rec2initinsvol|0x30;			//init rec2 insvol
	trilinc=0x81;					//tri enable
	noisevol=noiseinitvol;				//init noise vol
	st2a03=0x0f;					//2a03 ready
	rec3vol=A=rec3initinsvol&0x7f;			//init rec3 insvol
	rec4vol=A=rec4initinsvol&0x7f;			//init rec4 insvol
	rec5vol=A=rec5initinsvol|0x30;			//init rec5 insvol
	rec6vol=A=rec6initinsvol|0x30;			//init rec6 insvol
	stmmc5=0x03;					//mmc5 ready
	fme7.sqr1vol=sqr1initvol;			//init sqr1 vol
	fme7.sqr2vol=sqr2initvol;			//init sqr2 vol
	fme7.sqr3vol=sqr3initvol;			//init sqr3 vol
	for (X=0x07;X>=0;--X){
		fx1tuning[X]=fx1inittuning[X]&0x10;	//init fx tuning
	}
	state=-1;					//play delay mode
	count=initdelay;				//init delay count
	tempomul=inittempomul;				//init tempo to 450*mul/div
	tempodiv=inittempodiv;
	loopindex=initloopindex;			//init looping state
	loopaddr=initloopaddr;
	X=0x00;
	pop(A);
	initcallback();					//init config override for multi songs
	//init zeropage const
	goto newpage;					//switch in first page
}//no return
