	//[bank8]config
//@8100
extern mainpage[0x100];
//@8200
extern pageend[0x100];
//@8490
extern inittempomul,inittempodiv,initloopindex,initloopaddr,initdelay,noiseinitvol;
//@849C
extern rec1initinsvol,rec2initinsvol;
//@8800
extern divhiperiod[0x80];
//@8880
extern divloperiod[0x80];
//@8900
extern initcallback();
	//[bankB]data main
//@B000
extern dpcmnote[0x100];
//@B100
extern noisenote[0x100];
//@B200
extern trinote[0x100];
//@B300
extern rec5note[0x100];
//@B400
extern rec6note[0x100];
//@B500
extern rec1note[0x100];
//@B600
extern rec2note[0x100];
//@B700
extern rec3note[0x100];
//@B800
extern rec4note[0x100];
//@B900
extern noiseinsvol[0x100];
//@BA00
extern rec5insvol[0x100];
//@BB00
extern rec6insvol[0x100];
//@BC00
extern rec1insvol[0x100];
//@BD00
extern rec2insvol[0x100];
//@BE00
extern rec3insvol[0x100];
//@BF00
extern rec4insvol[0x100];
	//[bankD]sample
////@D000
//extern sample[0xff1];
//@DFFE
extern samplespeed,samplelength;

//@00
var1 state,count,tempomul,tempodiv,loopindex,loopaddr,pageindex,addr,maxaddr;
//@20
var1 rec1insbuf,rec2insbuf;
//@30
var1 rec1volbuf,rec2volbuf;

//@9011
_init_(A){
	goto init;
}//no return

//@9031
_play_(){	//#begin time-critical mode
	if (!(A=state)) return;
	if (A<0){
		if (count){
			--count;
			return;
		}
		state=1;				//play ready
	}
	ifcs (count=A=count-tempomul) return;		//tempo adapter
	count=A+tempodiv;
	Y=addr;						//process pattern
	A=noiseinsvol[Y]&0x0f;				//[noise] sub=-,-,-,-,vol(4);vol!=0:change vol
	if (A){
		noisevol=A|0x30;
	}
	A=noisenote[Y];					//[noise] main=short,control(3),period(4);control=000:key-on,control=111&period=E:key-off
	if (A==0xfe){					//key-off
		st2a03=0x07;
		st2a03=0x0f;
	}else if (!(A&0x70)){				//key-on
		noiseperiod=A;
		noiselen=0x00;
	}

	X=A=trinote[Y];					//[tri] main=-,oct(3),note(4);note<C:key-on,note=E:key-off
	if ((A&=0x0f)<0x0c){				//key-on
		trihiperiod=divhiperiod[X];
		triloperiod=divloperiod[X];
	}else if (A==0x0e){				//key-off
		st2a03=0x0b;
		st2a03=0x0f;
	}

	A=rec1insvol[Y]&0x0f;				//[rec1] sub=ins(2),control(2),vol(4);ins,control!=0:change ins,vol!=0:change vol
	if (A){
		rec1volbuf=A;
		rec1vol=A|=rec1insbuf;
	}
	A=rec1insvol[Y]&0xf0;
	if (A){
		rec1insbuf=A|0x30;
		rec1vol=A|=rec1volbuf;
	}
	X=A=rec1note[Y];				//[rec1] main=-,oct(3),note(4);note<C:key-on,note=E:key-off
	if ((A&=0x0f)<0x0c){				//key-on
		rec1hiperiod=divhiperiod[X];
		rec1loperiod=divloperiod[X];
	}else if (A==0x0e){				//key-off
		st2a03=0x0e;
		st2a03=0x0f;
	}
	A=rec2insvol[Y]&0x0f;				//[rec2] sub=ins(2),control(2),vol(4);ins,control!=0:change ins,vol!=0:change vol
	if (A){
		rec2volbuf=A;
		rec2vol=A|=rec2insbuf;
	}
	A=rec2insvol[Y]&0xf0;
	if (A){
		rec2insbuf=A|0x30;
		rec2vol=A|=rec2volbuf;
	}
	X=A=rec2note[Y];				//[rec2] main=-,oct(3),note(4);note<C:key-on,note=E:key-off
	if ((A&=0x0f)<0x0c){				//key-on
		rec2hiperiod=divhiperiod[X];
		rec2loperiod=divloperiod[X];
	}else if (A==0x0e){				//key-off
		st2a03=0x0d;
		st2a03=0x0f;
	}

	A=++addr;					//address inc
	if (A&&A-maxaddr-1<0) return;			//<0:cc(lo)	//if (A&&A<=maxaddr) return;
	X=++pageindex;					//new page
}//no return

newpage(X){
	Y=0x00;
	if (!(A=mainpage[X])){				//end of pages
		X=loopindex;
		if (!(A=mainpage[X])){			//null pointer for no loop
			state=0;
			return;
		}
		Y=loopaddr;
	}
	pageindex=X;					//set page index
	bankB=A;					//switch bank main
	addr=Y;						//set start addr
	maxaddr=pageend[X];				//set max addr
}

init(A){
	push(A);
	st2a03=0x00;					//all key-off and reset data
	rec2swp=rec1swp=0x08;				//disable swap
	rec1vol=X=A=rec1initinsvol|0x30;		//init rec1 insvol
	rec1volbuf=A&0x0f;
	rec1insbuf=X&0xf0;
	rec2vol=X=A=rec2initinsvol|0x30;		//init rec2 insvol
	rec2volbuf=A&0x0f;
	rec2insbuf=X&0xf0;
	trilinc=0x81;					//tri enable
	noisevol=noiseinitvol&0x0f|0x30;		//init noise vol
	st2a03=0x0f;					//2a03 ready
	state=-1;					//play delay mode
	count=initdelay;				//init delay count
	tempomul=inittempomul;				//init tempo to 450*mul/div
	tempodiv=inittempodiv;
	loopindex=initloopindex;			//init looping state
	loopaddr=initloopaddr;
	X=0x00;
	pop(A);
	initcallback();					//init config override for multi songs
	//init zeropage const
	goto newpage;					//switch in first page
}//no return
