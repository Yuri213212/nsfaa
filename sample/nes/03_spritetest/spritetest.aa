;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;	[setting]
;;;;;;;;;;;;;;;;
\image		nes	;file type: nes
\defnumlen	1	;default length of number (command $ and #) (def=1)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;	[header]
;;;;;;;;;;;;;;;;
\nes_mirror	1	;mirror flag, 0 for horizontal, 1 for vertical, 2 for 1-screen (some mapper only), 3 for 4-screen (some mapper only) (def=0)
\nes_battery	0	;whether use battery-backed RAM (def=0)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;	[library]
;;;;;;;;;;;;;;;;
\include	?/include/nesSystem.ah

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;	[chr00]
;;;;;;;;;;;;;;;;
\bank CHR_8K
@0000
\include	?/include/CP437.ah

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;	[prg00]
;;;;;;;;;;;;;;;;
\bank PRG_16K

;;;;;;;;;;;;;;;;
;	[definition]
;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;
;	[ciram]
;;;;;;;;;;;;;;;;
@2020	:STATICSTART
|4000

;;;;;;;;;;;;;;;;
;	[zeropage]
;;;;;;;;;;;;;;;;
@00
1:CONTROLLER1
|0100

;;;;;;;;;;;;;;;;
;	[memory]
;;;;;;;;;;;;;;;;
@0200
|0800

;;;;;;;;;;;;;;;;
;	[const]
;;;;;;;;;;;;;;;;
@C000

;;;;;;;;;;;;;;;;
;	[code]
;;;;;;;;;;;;;;;;
:RESETHANDLER {
	LIX $00 STX &PPUCTRL
	STX &PPUMASK
	BIT &PPUSTATUS
	{ :_LOOP BIT &PPUSTATUS BPZ !_LOOP }
	STX %CONTROLLER1
	LI $FF
	{ :_LOOP
		ST,X &OAMBUFFER
	:_CON INCX BNZ !_LOOP :_BRK }
	LI $0F ST &SP0NAME
	STX &SP0ATTRIBUTE
	STX &SP0X
	LI $07 ST &SP0Y
	{ :_LOOP BIT &PPUSTATUS BPZ !_LOOP }
	LADX ^NAME0 STX &PPUADDR LADX %NAME0 STX &PPUADDR
	TXA
	{ LIY #32 :_LOOP BZE !_BRK
		{ LIX #32 :_LOOP BZE !_BRK
			ST &PPUDATA
		:_CON DECX JMP &_LOOP :_BRK }
	:_CON DECY JMP &_LOOP :_BRK }
	LADX ^PALETTEBG STX &PPUADDR LADX %PALETTEBG STX &PPUADDR
	LI $2F ST &PPUDATA
	LI $30 ST &PPUDATA
	LADX ^PALETTESP0 STX &PPUADDR LADX %PALETTESP0 STX &PPUADDR
	ST &PPUDATA
	LADX ^STATICSTART STX &PPUADDR LADX %STATICSTART STX &PPUADDR
	LI $F9
	{ LIY #28 :_LOOP BZE !_BRK
		{ LIX #32 :_LOOP BZE !_BRK
			ST &PPUDATA
		:_CON DECX JMP &_LOOP :_BRK }
	:_CON DECY JMP &_LOOP :_BRK }
	LI #0 ST &PPUSCROLL ST &PPUSCROLL
	ST &OAMADDR
	LAD ^OAMBUFFER ST &OAMDMA
	LI $1E ST &PPUMASK
	BIT &PPUSTATUS
	LI $80 ST &PPUCTRL
	{ :_LOOP JMP &_LOOP }
}

:NMIHANDLER {
	PUSH
	LI $00 ST &OAMADDR
	LAD ^OAMBUFFER ST &OAMDMA
	LI $01 ST %CONTROLLER1
	ST &OUT LSRA ST &OUT
	{ :_LOOP
		LD &IN1 LSRA RCL %CONTROLLER1
	:_CON BCC !_LOOP :_BRK }
	{ LI %BTN_RIGHT BIT %CONTROLLER1 BZE !_ENDIF
		INC &SP0X
	:_ENDIF }
	{ LI %BTN_LEFT BIT %CONTROLLER1 BZE !_ENDIF
		DEC &SP0X
	:_ENDIF }
	{ LI %BTN_DOWN BIT %CONTROLLER1 BZE !_ENDIF
		INC &SP0Y
	:_ENDIF }
	{ LI %BTN_UP BIT %CONTROLLER1 BZE !_ENDIF
		DEC &SP0Y
	:_ENDIF }
	POP
RTI }

:IRQHANDLER {
RTI }

;;;;;;;;;;;;;;;;
;	[vector]
;;;;;;;;;;;;;;;;
|FFFA
@FFFA
&NMIHANDLER
@FFFC
&RESETHANDLER
@FFFE
&IRQHANDLER
