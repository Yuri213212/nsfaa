;;;;;;;;;;;;;;;;
;	[setting]
;;;;;;;;;;;;;;;;
\setophead	1
\setoptail	0
\setdefnumlen	1

;;;;;;;;;;;;;;;;
;	[header]
;;;;;;;;;;;;;;;;
\songs		2
\entry		1
\name
blocking test
\artist

\copyright

\ntsc		4
\pal		4
\ntscpal	0
\expand		0x00
\bankswitch	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

;;;;;;;;;;;;;;;;
;	[system]
;;;;;;;;;;;;;;;;
	;bank switch
	@5FF6
1:BANK6
1:BANK7
1:BANK8
1:BANK9
1:BANKA
1:BANKB
1:BANKC
1:BANKD
1:BANKE
1:BANKF
	;multiplier in MMC5
	@5205
1:MULLO		;store data to MULLO and MULHI then read the product
1:MULHI

;;;;;;;;;;;;;;;;
;	[apu]
;;;;;;;;;;;;;;;;
;;;;	[2A03]	;channel=rec1,rec2,tri,noise,dpcm
	;general
	@4015
:ST2A03		;-,-,-,dpcm,noise,tri,rec2,rec1 enable
	@4017
:IRQ2A03	;framemode,IRQ,-,-,-,-,-,-
	;rec1
	@4000
1:REC1VOL	;duty(2),lenhlt,~env,vol/envPeriod(4)
1:REC1SWP	;sweep,period(3),negate,shift(3)
1:REC1LOPERIOD	;loPeriod(8)
1:REC1HIPERIOD	;length(5),hiPeriod(3)
	;rec2
1:REC2VOL
1:REC2SWP
1:REC2LOPERIOD
1:REC2HIPERIOD
	;tri
2:TRILINC	;lenhlt,linarcount(7)
1:TRILOPERIOD	;loPeriod(8)
1:TRIHIPERIOD	;length(5),hiPeriod(3)
	;noise
2:NOISEVOL	;-,-,lenhlt,1,vol(4)
1:NOISEPERIOD	;short,-,-,-,period(4)
1:NOISELEN	;length(5),-,-,-
	;dpcm
1:DPCMMODE	;IRQ,loop,-,-,freq(4)
1:DPCMDATA	;-,data(7)
1:DPCMWAVE	;addr(8)
1:DPCMLEN	;length(8)

;;;;;;;;;;;;;;;;
;	[zeropage]
;;;;;;;;;;;;;;;;
@E0
1:ERRFLG

;;;;;;;;;;;;;;;;
;	[code]
;;;;;;;;;;;;;;;;
@8000
:_START_

:_INITSTATE
$00 $47 $00 $00 $00 $00 $00 $00 $00 $47 $00 $00 $00 $00 $00 $00
$00 $47 $00 $00 $00 $00 $00 $00 $00 $47 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$00 $41 $42 $43 $44 $45 $46 $47 $48 $49 $4A $4B $4C $4D $4E $4F
$50 $51 $52 $53 $54 $55 $56 $57 $58 $59 $5A $5B $00 $00 $00 $5F

@8100
:_INIT_ {
	PUSHF
	(
	LI $01 ST %ERRFLG		;set error flag
	CPYI $00 BEQ #2 $02 RET		;Y state check
	) TAY
	POP CMPI $36 BEQ #2 $02 RET	;F state check
	TSX CPXI $FD BEQ #2 $02 RET	;S state check
					;init state check
	LI $AD ST $00 ;LD 2$??FF
	LI $FF ST $01
	LI $60 ST $03 ;RET
	{ LIX $00 :_LOOP CPXI $20 BLT #3 JMP &_BRK
		STX $02
		CALL 2$0000
		CMP,X &_INITSTATE BEQ #2 $02 RET
	:_CON INCX JMP &_LOOP :_BRK }
					;unreadable data check
	{ LIX $40 :_LOOP CPXI $60 BLT #3 JMP &_BRK
		STX $02
		CALL 2$0000
		CMP,X &_INITSTATE BEQ #2 $02 RET
	:_CON INCX JMP &_LOOP :_BRK }
					;MMC5 multiplier check
	LI $03 ST &MULLO
	LI $05 ST &MULHI
	LD &MULLO CMPI $0F BEQ #2 $02 RET
					;MMC5 memory check
	{ LIX $00 :_LOOP CPXI $FF BLT #3 JMP &_BRK
		LI $02 ST,X 2$5C00
		LD,X 2$5C00 CMPI $02 BEQ #2 $02 RET
	:_CON INCX JMP &_LOOP :_BRK }
					;BANK7 check
	LI $FE ST &BANK7
	LD &BANK7 BEQ #2 $02 RET
	LIX $00
	{:_LOOP
		LD,X 2$7000 BEQ #2 $02 RET
	:_CON INCX BZE #3 JMP &_LOOP :_BRK }
	LI $01 ST &BANK7
	LIX $00
	{:_LOOP
		LI $02 ST,X 2$7000
		LD,X 2$7000 CMPI $02 BEQ #2 $02 RET
	:_CON INCX BZE #3 JMP &_LOOP :_BRK }
	LI $00 ST %ERRFLG		;clear error flag
	SEI				;do destructive things
	LI $FE ST &BANKF
	LI $FF LIX $00
	{:_LOOP
		ST,X 2$0100
	:_CON INCX BZE #3 JMP &_LOOP :_BRK }
	TYA
	CALL &_INIT_O
	JMP 2$4700			;infinite loop in VirtuaNES
}

:_PLAY_ {
	LD %ERRFLG BZE #2 $02 RET
	JMP &_PLAY_O
RET }

@8700
:_INIT_O {
	LI $00 ST &ST2A03
	LI $81 ST &TRILINC
	LI $04 ST &ST2A03
	LI $00 ST &TRIHIPERIOD
	LI #126 ST &TRILOPERIOD
	RET
}

:_PLAY_O {
	INC $C0 LD $C0 ST &DPCMDATA
	RET
}
